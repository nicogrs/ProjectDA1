@page "/{teamName}/{panelId}/EditEpic/{EpicId}"
@using Dominio
@using Interfaces
@using Task = Dominio.Task
@inject IEpicService EpicService
@inject NavigationManager Navigation
@inject Session Session

<PageTitle>Modificar Epica</PageTitle>
<h3>Modificar Epica</h3>
@if (!string.IsNullOrEmpty(message))
{
    <div class="alert alert-success" role="alert">
        @message
    </div>
}

<EditForm Model="modelChangeEpic" OnValidSubmit="HandleModify">
    <DataAnnotationsValidator/>
    <div class="d-flex justify-content-center align-items-center">
        <div class="w-50">
            <div class="form-group mt-4">
                <label id="name">Titulo</label>
                <InputText class="form-control" @bind-Value="@modelChangeEpic.Name" id="name"></InputText>
                <ValidationMessage For="@(() => modelChangeEpic.Name)"/>
            </div>

            <div class="form-group mt-4">
                <label for="lastName">Descripcion</label>
                <InputText class="form-control" @bind-Value="@modelChangeEpic.Description" id="description"></InputText>
                <ValidationMessage For="@(() => modelChangeEpic.Description)"/>
            </div>
        @if(Session.IsAdmin){
            <div class="form-group mt-4">
                <label for="birthDate">Fecha de expiraci√≥n</label>
                <InputDate class="form-control" id="birthDate" @bind-Value="@modelChangeEpic.ExpirationDate" min=@DateTime.Today.ToString()></InputDate>
                <ValidationMessage For="@(() => modelChangeEpic.ExpirationDate)"/>
            </div>

            <div class="form-group mt-4">
                <label id="userAmount">Prioridad</label>
                <InputSelect class="form-control" @bind-Value="modelChangeEpic.Priority" id="userAmount">
                    @foreach (var priority in Enum.GetValues(typeof(Task.Priority)))
                    {
                    <option value="@priority">@priority.ToString()</option>
                    }
                </InputSelect>
                <ValidationMessage For="@(() => modelChangeEpic.Priority)"/>
            </div>
        }
            <div class="mt-2">
                <div class="form-group mt-4">
                    <button class="btn btn-primary" type="submit">Modificar Epica</button>
                </div>
                <div class="col-4 mt-4">
                    <button class="btn btn-secondary" type="button" @onclick="GoBack">Volver</button>
                </div>
            </div>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public string teamName { get; set; }
    [Parameter]
    public string panelId { get; set; }
    [Parameter]
    public string EpicId { get; set; }
    Epic modelChangeEpic = new Epic();
    Epic toModify = new Epic();
    private string message;
    private Epic.Precedence selectedPrecedence;

    protected override void OnInitialized()
    {
        if (Session.CurrentUser == null)
        {
            Navigation.NavigateTo($"/error");
        }

        toModify = EpicService.GetEpicById(int.Parse(EpicId));
        modelChangeEpic.Description = toModify.Description;
        modelChangeEpic.Name = toModify.Name;
        modelChangeEpic.Priority = toModify.Priority;
        modelChangeEpic.ExpirationDate = toModify.ExpirationDate;
    }

    private void HandleModify()
    {
        if (!String.IsNullOrEmpty(modelChangeEpic.Name))
        {
            toModify.Name = modelChangeEpic.Name;
        }

        if (!String.IsNullOrEmpty(modelChangeEpic.Description))
        {
            toModify.Description = modelChangeEpic.Description;
        }
        if (modelChangeEpic.ExpirationDate != null)
        {
            toModify.ExpirationDate = modelChangeEpic.ExpirationDate;
        }
        
        toModify.Priority = modelChangeEpic.Priority;
        EpicService.UpdateEpic(toModify);
        message = "Epica modificada";
    }

    private void GoBack()
    {
        Navigation.NavigateTo($"/{teamName}/{panelId}/tasks");
    }
}