@page "/TaskImport"
@using Dominio;
@using Task = Dominio.Task
@inject NavigationManager Navigation;
@inject Session Session;
@inject PanelService PlService

<PageTitle>Import Tasks from .csv</PageTitle>

<h4>Upload a CSV file</h4>

<InputFile OnChange="HandleFileSelected" accept=".csv" />

@if (fileContent != null)
{
    <p>Archivo cargado.</p>
}


@if (tasks != null && tasks.Any())
{
<table class="table table-bordered">
    <thead>
    <tr>
        <th>Agregar Tarea?</th>
        <th>Titulo</th>
        <th>Descripcion</th>
        <th>Fecha de vencimiento</th>
    </tr>
    </thead>
    <tbody>
    @foreach (Task task in tasks)
    {
    <tr>
        <td>
            <input type="checkbox" @onchange="e => ToggleSelection(task, e.Value)"/>
        </td>
        <td>@task.Title</td>
        <td>@task.Description</td>
        <td>@expDateToString(task.ExpirationDate)</td>
    </tr>
    }
    </tbody>
</table>

<button class="btn btn-primary" @onclick="GetSelectedTasks">Agregar tareas a panel</button>
}


@code {
    private IBrowserFile? selectedFile;
    
    private string? fileContent;

    private List<Task> tasks;
    
    private HashSet<Task> SelectedTasks = new HashSet<Task>();
    
    
    protected override void OnInitialized()
    {
        if (Session.CurrentUser == null)
        {
            Navigation.NavigateTo("/error");
        }
    }
    
    

    private async System.Threading.Tasks.Task HandleFileSelected(InputFileChangeEventArgs e)
    {
        selectedFile = e.File;

        if (selectedFile != null)
        {
            using var stream = selectedFile.OpenReadStream();
            using var reader = new StreamReader(stream);
            fileContent = await reader.ReadToEndAsync();
            
            ProcessCsvFile(fileContent);
        }
    }

    private void ProcessCsvFile(string content)
    {
        Dominio.TaskImport taskImport = new Dominio.TaskImport();

        tasks = taskImport.ReadTasksFromContent(content,Session.CurrentUser);

        StateHasChanged();
    }

    private string expDateToString(DateTime dt)
    {
        return $"{dt.Year}/{dt.Month}/{dt.Day}";
    }

    private void ToggleSelection(Task task, object isSelected)
    {
        bool selected = (bool)isSelected;
        if (selected)
        {
            SelectedTasks.Add(task);
        }
        else
        {
            SelectedTasks.Remove(task);
        }
    }
    
    private void GetSelectedTasks()
    {
        Console.WriteLine($"Selected {SelectedTasks.Count} tasks");
        //TO DO
        //AGREGAR TASKS A PANEL
    }
}
