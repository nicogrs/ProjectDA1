@page "/TaskImport"
@using Dominio;
@using Task = Dominio.Task

<h3>TaskImport</h3>

<h3>Upload a CSV file</h3>

<InputFile OnChange="HandleFileSelected" accept=".csv" />

@if (fileContent != null)
{
    <p>Archivo cargado.</p>
}

@code {
    private IBrowserFile? selectedFile;
    private string? fileContent;

    private List<Task> tasks;

    private async System.Threading.Tasks.Task HandleFileSelected(InputFileChangeEventArgs e)
    {
        selectedFile = e.File;

        if (selectedFile != null)
        {
            using var stream = selectedFile.OpenReadStream();
            using var reader = new StreamReader(stream);
            fileContent = await reader.ReadToEndAsync();
            
            ProcessCsvFile(fileContent);
        }
    }

    private void ProcessCsvFile(string content)
    {
        Dominio.TaskImport taskImport = new Dominio.TaskImport();
        //Console.WriteLine(content);
        tasks = taskImport.ReadTasksFromContent(content,new User(){Name = "TestUser"});
        Console.WriteLine(tasks[0].Title);
        Console.WriteLine(tasks[1].Title);
        Console.WriteLine(tasks[2].Title);
        StateHasChanged();
    }

    private string expDateToString(DateTime dt)
    {
        return $"{dt.Year}/{dt.Month}/{dt.Day}";
    }
}

@if (tasks != null && tasks.Any())
{
    <table class="table table-bordered">
        <thead>
        <tr>
            <th>Add to panel?</th>
            <th>Title</th>
            <th>Description</th>
            <th>Expiration Date</th>
        </tr>
        </thead>
        <tbody>
        @foreach (Task task in tasks)
        {
            <tr>
                <td>
                    <input type="checkbox" @onchange="e => ToggleSelection(task, e.Value)"/>
                </td>
                <td>@task.Title</td>
                <td>@task.Description</td>
                <td>@expDateToString(task.expDate)</td>
            </tr>
        }
        </tbody>
    </table>

    <button class="btn btn-primary" @onclick="GetSelectedTasks">Agregar tareas a panel</button>
}
@code {
    private HashSet<Task> SelectedTasks = new HashSet<Task>();

    private void ToggleSelection(Task task, object isSelected)
    {
        bool selected = (bool)isSelected;
        if (selected)
        {
            SelectedTasks.Add(task);
        }
        else
        {
            SelectedTasks.Remove(task);
        }
    }
    
    private void GetSelectedTasks()
    {
        Console.WriteLine($"Selected {SelectedTasks.Count} tasks");
    }
}
