@page "/{teamName}/{panelId}/{taskId}/graphic"
@using Dominio
@using Services
@using Task = Dominio.Task
@using Syncfusion.Blazor.Charts
@inject TaskService TskService
@inject NavigationManager Navigation
@inject Session Session

<h3>Gr√°fico Comparativo</h3>

<SfChart>
    <ChartPrimaryXAxis Title="Esfuerzo" ValueType="Syncfusion.Blazor.Charts.ValueType.Category" />
    <ChartPrimaryYAxis Title="Tiempo (horas)" ValueType="Syncfusion.Blazor.Charts.ValueType.Double" />
    
    <ChartSeriesCollection>
        <ChartSeries DataSource="@effortData" Type="ChartSeriesType.Column" XName="Esfuerzo" YName="EsfuerzoEsperado" Name="Esfuerzo Esperado" Palette="@(new string[] { "#28a745" })" />

        <ChartSeries DataSource="@effortData" Type="ChartSeriesType.Column" XName="Esfuerzo" YName="EsfuerzoInvertido" Name="Esfuerzo Invertido" Palette="@(new string[] { "#007bff" })" />

        <ChartSeries DataSource="@effortData" Type="ChartSeriesType.Column" XName="Esfuerzo" YName="EsfuerzoFaltante" Name="Esfuerzo Faltante" Palette="@(new string[] { "#dc3545" })" />
    </ChartSeriesCollection>
</SfChart>
@if (task.Ended)
{
    <div class="alert alert-success" role="alert">
        <p>La tarea fue: @status</p>
    </div>
}
<div class="mt-2">
    <div class="col-4 mt-4">
        <button class="btn btn-secondary" type="button" @onclick="GoBack">Volver</button>
    </div>
</div>
@code {
    [Parameter]
    public string teamName { get; set; }
    [Parameter]
    public string panelId { get; set; }
    [Parameter]
    public string taskId { get; set; }

    private Task task;
    private List<EffortData> effortData = new List<EffortData>();
    private string status;

    protected override void OnInitialized()
    {
        task = TskService.GetTaskById(int.Parse(taskId));
        var expectedEffort = task.ExpectedEffort;
        var invertedEffort = task.InvertedEffort;
        var missingEffort = TskService.EffortComparated(int.Parse(taskId));
        status = TskService.EffortStatus(int.Parse(taskId));

        effortData.Add(new EffortData
        {
            Esfuerzo = "Esfuerzo",
            EsfuerzoEsperado = expectedEffort,
            EsfuerzoInvertido = invertedEffort,
            EsfuerzoFaltante = Math.Max(0, missingEffort)
        });
    }

    public class EffortData
    {
        public string Esfuerzo { get; set; }
        public int EsfuerzoEsperado { get; set; }
        public int EsfuerzoInvertido { get; set; }
        public int EsfuerzoFaltante { get; set; }
    }
    
    private void GoBack()
    {
        Navigation.NavigateTo($"/{teamName}/{panelId}/tasks");
    }
}