@page "/{teamName}/{panelId}/tasks"
@using Dominio
@using Interfaces
@using InterfazWeb.Pages.Epics
@inject ITaskService TkService
@inject IEpicService EpicService
@inject Session Session
@inject NavigationManager Navigation
<PageTitle>Task</PageTitle>

<h3 class="mb-3">Tareas</h3>
<div class="row d-flex justify-content-between align-items-center">
    <div class="col d-flex">
        <button class="btn btn-primary me-2" type="submit" @onclick="CreateTask">Crear Tarea</button>
        <button class="btn btn-secondary me-2" type="submit" @onclick="GoToCreateEpic">Crear Epicas</button>
        <button class="btn btn-primary me-2" type="submit" @onclick="ExpiredTasks">Tareas Vencidas</button>
        @if (!Session.IsAdmin)
        {
            <button class="btn btn-primary" type="submit" @onclick="GoToImport">Importar tareas desde archivo</button>
        }
    </div>
    <div class="col-auto">
        <button class="btn btn-primary" type="submit" @onclick="GoBack">Volver a Paneles</button>
    </div>

</div>
<div class="row">
    @if (Epics.Count != 0)
    {
        foreach (var epic in Epics)
        {
            <EpicCard EpicId="@epic.Id.ToString()"
                      EpicTeamName="@teamName"
                      EpicPanelId="@panelId"
                      EpicOnTaskDeleted="RefreshTasks"
            />
        }
    }
</div>
<div class="row">
    @if (Tasks.Count >= 0)
    {
        foreach (var task in Tasks)
        {
            if (task.ExpirationDate > DateTime.Today)
            {
                <div class="d-flex justify-content-center align-items-center">
                    <div class="w-100">
                        <TaskCard Title="@task.Name"
                                  Description="@task.Description"
                                  Precedence="@task.Precedence"
                                  EndDate="@task.ExpirationDate"
                                  Comments="@task.Comments"
                                  teamName="@teamName"
                                  panelId="@panelId"
                                  CanBeDeleted="@true"
                                  TaskId="@task.Id"
                                  OnTaskDeleted="RefreshTasks"/>
                    </div>
                </div>
            }
        }
    }
    else
    {
        <p class="mt-5">Panel sin tareas.</p>
    }
</div>

@code {
    [Parameter] public string teamName { get; set; }
    [Parameter] public string panelId { get; set; }

    private List<Dominio.Task> Tasks;
    private List<Epic> Epics;

    protected override void OnInitialized()
    {
        if (Session.CurrentUser == null)
        {
            Navigation.NavigateTo("/error");
        }

        RefreshTasks();
    }

    private void RefreshTasks()
    {
        Tasks = TkService.GetNonExpiredTasks(int.Parse(panelId))
            .Where(t => t.IsInEpic == false).ToList();
        Epics = EpicService.GetEpicsByPanelId(int.Parse(panelId));
        StateHasChanged();
    }

    private void CreateTask()
    {
        Navigation.NavigateTo($"/{teamName}/{panelId}/create");
    }
    
    private void GoToCreateEpic()
    {
        Navigation.NavigateTo($"/{teamName}/{panelId}/createEpic");
    }

    private void GoToImport()
    {
        Navigation.NavigateTo($"/{teamName}/{panelId}/TaskImportService");
    }

    public void ExpiredTasks()
    {
        Navigation.NavigateTo($"/{teamName}/{panelId}/expiredtasks");
    }

    private void GoBack()
    {
        Navigation.NavigateTo($"/{teamName}/panel");
    }
    

}
        
 