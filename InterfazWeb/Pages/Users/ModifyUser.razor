@page "/users/modify"
@using Dominio
@using Dominio.Data
@using DTOs

@inject UserDataBase UDatabase
@inject UserService UService
@* @inject PasswordService PService *@
@inject Session Session
@inject NavigationManager Navigation

<PageTitle>ModifyUser</PageTitle>
<h3>Modificar Usuario</h3>

<EditForm Model="modelModifyUser" OnValidSubmit="ShowModify">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label for="releaseYear">Usuario</label>
        <InputSelect @bind-Value="selectedUser" @onchange="OnChangeUser">
            <option value="0" disabled>Ninguna seleccionada</option>
            @foreach (var user in Users)
            {
                <option value="@user.Email">@user.Email</option>
            }
        </InputSelect>
    </div>
    
    <div class="form-group">
        <button class="btn btn-primary" type="submit">Modificar Usuario</button>
    </div>
    <div class="col-4">
        <button class="btn btn-primary" type="button" @onclick="GoBack">Volver</button>
    </div>
</EditForm>

@if (showConfirmation)
{
    <EditForm Model="modelChangeInformation" OnValidSubmit="HandleUpdate">
        <DataAnnotationsValidator/>
        <div class="form-group">
            <label id="name">Nombre</label>
            <InputText class="form-control" @bind-Value="@modelChangeInformation.Name" id="name"></InputText>
            <ValidationMessage For="@(() => modelChangeInformation.Name)"/>
        </div>
    
        <div class="form-group">
            <label for="lastName">Apellido</label>
            <InputText class="form-control" @bind-Value="@modelChangeInformation.Surname" id="lastName"></InputText>
            <ValidationMessage For="@(() => modelChangeInformation.Surname)"/>
        </div>
   
        <div class="form-group">
            <label for="birthDate">Fecha de nacimiento</label>
            <InputDate class="form-control" id="birthDate" @bind-Value="@modelChangeInformation.BirthDate" min="1900-01-01"></InputDate>
            <ValidationMessage For="@(() => modelChangeInformation.BirthDate)"/>
        </div>
        @if (Session.IsAdmin)
        {
            <div class="form-group">
                <label for="password">Contraseña</label>
                <button class="btn btn-primary" type="button" @onclick="GeneratePassword">Generar contraseña</button>
                <InputText class="form-control" id="password" type="text" @bind-Value="@modelChangeInformation.Password" readonly="true" />
            </div>
        }
        <div class="mt-2">
            <div class="form-group">
                <button class="btn btn-primary" type="submit">Confirmar</button>
            </div>
            <button class="btn btn-primary" type="button" @onclick="CancelUpdate">Cancelar</button>
        </div>
        
    </EditForm>

}

@code {
    User modelModifyUser = new User();
    UserModifyDTO modelChangeInformation = new UserModifyDTO();
    private List<User> Users;
    private string modifyMessage;
    private string selectedUser = "";
    private bool showConfirmation = false;
    private string newPassword;
    private PasswordService passwordService = new PasswordService();


    protected override void OnInitialized()
    {
        Users = UDatabase.GetUsers();
    }
    
    private void OnChangeUser(ChangeEventArgs e)
    {
        string userEmail = e.Value.ToString();
        modelModifyUser = UDatabase.GetUsers().FirstOrDefault(u => u.Email.Equals(userEmail));
    }
    private void GeneratePassword()
    {
        newPassword = passwordService.GenerateRandomPassword();
        modelChangeInformation.Password = newPassword;
    }

    private void ShowModify()
    {
        showConfirmation = true;
    }

    private void HandleUpdate()
    {
        User modifyUser = UDatabase.GetUserByEmail(modelModifyUser.Email);
        
        UserModifyDTO u = new UserModifyDTO
        {
            Name = modifyUser.Name,
            Surname = modifyUser.Surname,
            BirthDate = modifyUser.BirthDate,
            Password = modifyUser.Password,
            Email = modelModifyUser.Email
        };
        
        if (modelChangeInformation.Name != null)
        {
            u.Name = modelChangeInformation.Name;
        }
    
        if (modelChangeInformation.Surname != null)
        {
            u.Surname = modelChangeInformation.Surname;
        }

        if (modelChangeInformation.BirthDate != default(DateTime))
        {
            u.BirthDate = modelChangeInformation.BirthDate;
        }
        
        if (modelChangeInformation.Password != null)
        {
            u.Password = modelChangeInformation.Password;
        }
        
        UService.UpdateUser(u.ToEntity());
        showConfirmation = false;
        modifyMessage = "Usuario modificado.";
        
    }

    private void CancelUpdate()
    {
        showConfirmation = false;
    }

    private void GoBack()
    {
        Navigation.NavigateTo("/users");
    }
}
