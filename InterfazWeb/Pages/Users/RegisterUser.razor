@page "/users/register"
@using Dominio
@using Dominio.Data
@using DTOs
@inject IUserService UService
@inject IUserDatabase UDatabase
@inject NavigationManager Navigation
@inject Session Session

<PageTitle>Register</PageTitle>

<h3>Registro de usuarios</h3>
@if (!string.IsNullOrEmpty(messageSuccess))
{
    <div class="alert alert-success" role="alert">
        @messageSuccess
    </div>
}
@if (!string.IsNullOrEmpty(messageNotSuccess))
{
    <div class="alert alert-danger" role="alert">
        @messageNotSuccess
    </div>
}

<EditForm Model="modelRegister" OnValidSubmit="HandleRegister">
    <DataAnnotationsValidator/>
    <div class="d-flex justify-content-center align-items-center">
        <div class="w-50">
            <div class="form-group mb-3">
                <label id="name">Nombre</label>
                <InputText class="form-control" @bind-Value="@modelRegister.Name" id="name"></InputText>
                <ValidationMessage For="@(() => modelRegister.Name)"/>
            </div>

            <div class="form-group mb-3">
                <label for="lastName">Apellido</label>
                <InputText class="form-control" @bind-Value="@modelRegister.Surname" id="lastName"></InputText>
                <ValidationMessage For="@(() => modelRegister.Surname)"/>
            </div>

            <div class="form-group mb-3">
                <label for="birthDate">Fecha de nacimiento</label>
                <InputDate class="form-control" id="birthDate" @bind-Value="@modelRegister.BirthDate" min="1900-01-01"></InputDate>
                <ValidationMessage For="@(() => modelRegister.BirthDate)"/>
            </div>

            <div class="form-group mb-3">
                <label for="email">Email</label>
                <InputText class="form-control" id="email" @bind-Value="@modelRegister.Email"></InputText>
                <ValidationMessage For="@(() => modelRegister.Email)"/>
            </div>

            <div class="form-group mb-3">
                <label for="password">Contrase√±a</label>
                <InputText class="form-control" id="password" @bind-Value="@modelRegister.Password" type="@passwordInputType"></InputText>
                <ValidationMessage For="@(() => modelRegister.Password)"/>
            </div>

            <div class="form-group mb-3">
                <label for="admin">Administrador</label>
                <InputCheckbox Class="mt-2" @bind-Value="@modelRegister.Admin" />
                <ValidationMessage For="@(() => modelRegister.Admin)"/>
            </div>

            <div class="form-group mb-3">
                <button class="btn btn-primary" type="submit">Registrar Usuario</button>
            </div>
        </div>
    </div>
</EditForm>
<div class="col-4">
    <button class="btn btn-secondary" type="button" @onclick="GoBack">Volver</button>
</div>

@code {
    UserRegisterDTO modelRegister = new UserRegisterDTO{BirthDate = DateTime.Today.AddMonths(-1)};
    private string messageSuccess;
    private string messageNotSuccess;
    private bool showPassword = false;
    private string passwordInputType => showPassword ? "text" : "password";
    private bool add;
    
    protected override void OnInitialized()
    {
        if (!Session.IsAdmin)
        {
            Navigation.NavigateTo("/error");
        }
    }
    
    private void HandleRegister()
    {
        UserRegisterDTO u = new UserRegisterDTO
        {
            Name = modelRegister.Name,
            Surname = modelRegister.Surname,
            BirthDate = modelRegister.BirthDate,
            Email = modelRegister.Email,
            Password = modelRegister.Password,
            Admin = modelRegister.Admin
        };
        add = UService.CreateUser(u.ToEntity());
        if (add)
        {
            messageSuccess = "Usuario Registrado con exito";
        }
        else
        {
            messageNotSuccess= "No se pudo crear el usuario";
        }
        
    }

    private void GoBack()
    {
        Navigation.NavigateTo("/");
    }
}