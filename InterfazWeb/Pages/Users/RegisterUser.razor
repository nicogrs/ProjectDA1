@page "/users/register"

@using Dominio.Data
@using Logica
@using DTOs
@inject UserDataBase UDatabase
@inject NavigationManager Navigation
@inject Session Session

<PageTitle>Registro</PageTitle>

<EditForm Model="modelRegister" OnValidSubmit="HandleRegister">
    <DataAnnotationsValidator/>
    <div class="form-group">
        <label id="name">Nombre</label>
        <InputText class="form-control" @bind-Value="@modelRegister.Name" id="name"></InputText>
        <ValidationMessage For="@(() => modelRegister.Name)"/>
    </div>
    
    <div class="form-group">
        <label for="lastName">Apellido</label>
        <InputText class="form-control" @bind-Value="@modelRegister.Surname" id="lastName"></InputText>
        <ValidationMessage For="@(() => modelRegister.Surname)"/>
    </div>
   
    <div class="form-group">
        <label for="birthDate">Fecha de nacimiento</label>
        <InputDate class="form-control" id="birthDate" @bind-Value="@modelRegister.BirthDate" min="1900-01-01"></InputDate>
        <ValidationMessage For="@(() => modelRegister.BirthDate)"/>
    </div>

    <div class="form-group">
        <label for="email">Email</label>
        <InputText class="form-control" id="email" @bind-Value="@modelRegister.Email"></InputText>
        <ValidationMessage For="@(() => modelRegister.Email)"/>
    </div>

    <div class="form-group">
        <label for="password">Contrase√±a</label>
        <InputText class="form-control" id="password" @bind-Value="@modelRegister.Password" type="@passwordInputType"></InputText>
        <ValidationMessage For="@(() => modelRegister.Password)"/>
    </div>
    
    <div class="form-group">
        <button class="btn btn-primary" type="submit">Registrarse</button>
    </div>
    @if (!string.IsNullOrEmpty(errorMessage))
    {
    <div class="alert alert-danger" role="alert">
        @errorMessage
    </div>
    }
</EditForm>

@code {
    UserRegisterDTO modelRegister = new UserRegisterDTO();
    private string errorMessage;
    private bool showPassword = false;
    private string passwordInputType => showPassword ? "text" : "password";
    
    protected override void OnInitialized()
    {
        if (!Session.IsAdmin)
        {
            Navigation.NavigateTo("/error");
        }
    }
    
    private void HandleRegister()
    {
        UserRegisterDTO u = new UserRegisterDTO
        {
            Name = modelRegister.Name,
            Surname = modelRegister.Surname,
            BirthDate = modelRegister.BirthDate,
            Email = modelRegister.Email,
            Password = modelRegister.Password
        };

        UDatabase.AddUser(u.ToEntity());
        errorMessage = null;

        Navigation.NavigateTo("/");
    }
    
}