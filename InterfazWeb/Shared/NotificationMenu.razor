@using Dominio
@using Interfaces
@inject Session Session
@inject INotificationService NtService
@inject Notifications Nots

<div class="position-fixed top-0 end-0 p-2 d-flex justify-content-end">
    <div class="dropdown">
        <button @onclick="ShowModal" class="btn btn-light dropdown-toggle" type="button" aria-expanded="@isModalVisible">
            <img src="notification-bell.svg" alt="NotificationMenu Icon" width="24" height="24"/>
            @if (Notifications != null && Notifications.Count > 0)
            {
                <span class="badge bg-danger">@Notifications.Count</span>
            }
        </button>
        
        @if (isModalVisible){
          
            <ul class="dropdown-menu dropdown-menu-end show w-auto position-absolute"
                aria-labelledby="notificationMenuButton"  style=" right: 0; top: 100%;">
                    @if (Notifications.Count > 0)
                    {
                        @foreach (var notification in Notifications)
                        {
                            <div class="d-flex justify-content-between align-items-center">
                                <li class="me-3">
                                    <a class="dropdown-item d-flex">
                                        @notification.Text;
                                    </a>
                                </li>
                                <button @onclick="() => DeleteNotification(notification)" class="btn d-flex me-3">
                                    <img src="icons-cancelar.svg" alt="NotificationMenu Icon" width="24" height="24"/>
                                </button>
                            </div>
                            <div class="dropdown-divider"></div>
                        }
                        
                    }
                    else
                    {
                        <div class="dropdown-divider"></div>
                        <li class="dropdown-item-text w-100">No tienes notificaciones.</li>
                        <div class="dropdown-divider"></div>
                    }
                </ul>
            }
    </div>
</div>


@code {
    [Parameter] 
    public List<Notification> Notifications { get; set; }

    private bool isModalVisible = false;
    
    protected override void OnInitialized()
    {
        LoadNotifications(); 
        Nots.OnChangeNotifications += UpdateNotifications;
    }
    
    public void LoadNotifications()
    {
        Notifications = NtService.GetNotificationsByUserId(Session.CurrentUser.Id);
    }
    
    private void UpdateNotifications()
    {
        LoadNotifications();
        InvokeAsync(() => StateHasChanged());
    }

    
    private void ShowModal()
    {
        isModalVisible = !isModalVisible;
    }

    private void DeleteNotification(Notification notification)
    {
        NtService.DeleteNotification(notification);
        LoadNotifications();
    }

}
